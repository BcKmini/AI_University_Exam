기말고사 대체 과제

사용해야 하는 data file의 크기가 300MB가 넘기 때문에 github classroom을 사용하지 않습니다.

- 과제는 자신의 컴퓨터에서 수행 하고 소스코드와 ipynb 보고서를 하나의 zip 파일로 만들어 제출하세요.

- 데이터는 (face_mask.zip) 제출하는 zip 파일에 첨부하지 않지만 내가 제출한 zip 파일을 데이터가 있는 폴더에 풀면 바로 실행할 수 있는 상태로 제출해야 합니다 

-- 즉 제출한 파일과 교수가 가지고 있는 압축된 데이터 파일이 같이 directory에 있으면 프로그램이 실행되어야 함)

-- 데이터를 제출하는 zip 파일에 포함하면 10% 감점합니다.


객체 인식 YOLO 활용 - 마스크 착용 상태 파악

배경:

본 과제에서는 딥러닝 기반 객체 인식 기술인 YOLO (You Only Look Once) 를 이용하여 사람들이 마스크를 제대로 착용했는지를 자동으로 분석하는 시스템을 구축합니다.

데이터셋:

    사람 얼굴이 있는 사진 801장 (라벨링 완료):
        각 사진에는 얼굴 영역을 나타내는 바운딩 박스와 0: “마스크 잘 착용”, 1: “ 마스크 미 착용”, 2 “마스크 잘 못 착용” 라벨이 포함되어 있습니다.
        데이터셋은 자신이 train, validation, test로 6:2:2 분할해야 합니다.

과제:

    YOLO 모델 훈련 (50점):
        제공된 데이터셋을 이용하여 YOLOv5 모델을 학습시키세요.
        훈련 과정에서 손실 함수의 변화 추이를 시각화하고, 훈련된 모델의 성능을 평가하세요. (mAP@0.5, Precision, Recall 등의 지표 활용)
        하이퍼파라미터 튜닝을 통해 모델의 성능을 향상시키세요. (Epoch, Batch size, Learning rate 등 조정)
    객체 인식 및 시각화 (30점):
        훈련된 YOLO 모델을 활용하여 사진에서 마스크 착용 상태를 검출하고, 착용 상태를 3가지로 분류하세요.
        검출된 얼굴 영역은 바운딩 박스로 표시하고, 마스크 상태 (0, 1, 2) 를 텍스트로 함께 출력하세요.
        OpenCV 등의 라이브러리를 활용하여 결과를 시각화하세요.
    결과 분석 및 개선 방안 제시 (20점):
        시스템의 정확도와 성능을 분석하고, 오류 사례를 분석하세요.
        실제 환경에서 발생할 수 있는 문제점을 고려하여 시스템의 성능을 향상시킬 수 있는 방안을 제시하세요.

제출:

    소스 코드: YOLO 모델 훈련 및 실시간 객체 인식을 위한 노트북 (ipynb) 파일
    보고서:
        개발 환경 설정 (사용한 라이브러리 버전 명시)
        모델 훈련 과정 설명 및 결과 분석 (손실 함수 변화 그래프, 성능 지표 포함)
        하이퍼파라미터 튜닝 과정 및 결과 설명
        실시간 객체 인식 결과 화면 캡처 및 분석
        오류 사례 분석 및 개선 방안 제시

평가 기준:

    YOLO 모델 훈련 및 성능 평가의 정확성
    실시간 객체 인식 및 시각화 구현의 완성도
    결과 분석의 논리성 및 개선 방안의 현실성

참고 자료:

    YOLOv5 공식 GitHub 레포지토리: https://github.com/ultralytics/yolov5
    OpenCV 공식 문서: https://docs.opencv.org/
